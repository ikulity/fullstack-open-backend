{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","request","delete","console","log","Filter","filter","handleFilterChange","value","onChange","PersonForm","handleSubmit","newName","newNumber","nameChange","numberChange","onSubmit","type","Persons","persons","deleteHandler","map","person","name","number","toLowerCase","includes","Contact","onClick","Notification","message","isError","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setIsError","useEffect","personService","showMessage","setTimeout","event","target","preventDefault","newPerson","some","window","confirm","personId","find","updatedPersons","concat","catch","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2936fb96.chunk.js","sourcesContent":["// backend communication implemented already!\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    console.log(`Deleting with url: ${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ handleSubmit, newName, newNumber, nameChange, numberChange }) => {\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={nameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={numberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ filter, persons, deleteHandler }) => {\n  const filterName = ({ name }) => {\n    return name.toLowerCase().includes(filter.toLowerCase())\n  }\n  return (\n    <ul>\n      {filter === ''\n        ? persons.map((person) => <Contact name={person.name} number={person.number} id={person.id} deleteHandler={deleteHandler} key={person.id} />)\n        : persons.filter(filterName).map((person) => <Contact name={person.name} number={person.number} id={person.id} deleteHandler={deleteHandler} key={person.id} />)}\n    </ul>\n  )\n}\n\nconst Contact = ({ name, number, id, deleteHandler }) => {\n  return (\n    <li>{name} {number} <button onClick={deleteHandler(id, name)}>delete</button></li>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n\n  const [message, setMessage] = useState(null)\n  const [isError, setIsError] = useState(true)\n\n  useEffect(() => {\n    personService.getAll().then((persons) => {\n      setPersons(persons)\n    })\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newPerson = { name: newName, number: newNumber }\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        // Update a person's number\n        const personId = persons.find(person => person.name === newName).id\n        personService.update(personId, newPerson)\n        const updatedPersons = persons.map(person => person.id === personId ? { ...person, number: newNumber } : person)\n        setPersons(updatedPersons)\n        showMessage(`Updated ${newName}`)\n      }\n    } else {\n      // Create a new 'person'\n      personService.create(newPerson).then((response) => {\n        setPersons(persons.concat(response))\n      })\n      setNewName('')\n      setNewNumber('')\n      showMessage(`Added ${newName}`)\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleDelete = (id, name) => () => {\n    if (window.confirm(`Delete ${name} from phonebook?`)) {\n      // Delete from backend\n      personService.remove(id).then(() => {\n        console.log('person deleted...')\n      }).catch(() => {\n        showMessage(`Information of ${name} has already been removed from server`, true)\n      })\n      // Delete from state\n      const newPersons = persons.filter(person => person.id !== id)\n      setPersons(newPersons)\n    }\n  }\n\n  // function for setting up the notification message, default type is a regular message (green)\n  // setting 'isError' to true changes it to an error message (red)\n  const showMessage = (message, isError = false) => {\n    setIsError(isError)\n    setMessage(message)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} isError={isError} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h3>Add a new</h3>\n      <PersonForm handleSubmit={handleSubmit} newName={newName} newNumber={newNumber} nameChange={handleNameChange} numberChange={handleNumberChange} />\n\n      <h3>Numbers</h3>\n      <Persons filter={filter} persons={persons} deleteHandler={handleDelete} />\n    </div>\n  )\n}\n\nconst Notification = ({ message, isError }) => {\n  if (message === null) return null\n\n  return (\n    <div className={`${isError ? \"error\" : \"message\"} notification`} >\n      {message}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}