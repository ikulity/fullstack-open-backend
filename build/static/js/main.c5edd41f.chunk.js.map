{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","handleFilterChange","value","onChange","PersonForm","handleSubmit","newName","newNumber","nameChange","numberChange","onSubmit","type","Persons","persons","deleteHandler","map","person","name","number","toLowerCase","includes","Contact","onClick","Notification","message","isError","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setIsError","useEffect","personService","showMessage","JSON","stringify","setTimeout","event","target","preventDefault","newPerson","some","window","confirm","personId","find","updatedPersons","catch","error","concat","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5edd41f.chunk.js","sourcesContent":["// backend communication implemented already!\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst Filter = ({ filter, handleFilterChange }) => {\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={handleFilterChange} />\n        </div>\n    )\n}\n\nconst PersonForm = ({ handleSubmit, newName, newNumber, nameChange, numberChange }) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                name: <input value={newName} onChange={nameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={numberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Persons = ({ filter, persons, deleteHandler }) => {\n    const filterName = ({ name }) => {\n        return name.toLowerCase().includes(filter.toLowerCase())\n    }\n    return (\n        <ul>\n            {filter === ''\n                ? persons.map((person) => <Contact name={person.name} number={person.number} id={person.id} deleteHandler={deleteHandler} key={person.id} />)\n                : persons.filter(filterName).map((person) => <Contact name={person.name} number={person.number} id={person.id} deleteHandler={deleteHandler} key={person.id} />)}\n        </ul>\n    )\n}\n\nconst Contact = ({ name, number, id, deleteHandler }) => {\n    return (\n        <li key={id}>{name} {number} <button onClick={deleteHandler(id, name)}>delete</button></li>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n\n    const [message, setMessage] = useState(null)\n    const [isError, setIsError] = useState(true)\n\n    useEffect(() => {\n        personService.getAll().then((persons) => {\n            setPersons(persons)\n        })\n    }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newPerson = { name: newName, number: newNumber }\n        if (persons.some(person => person.name === newName)) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                // Update a person's number\n                const personId = persons.find(person => person.name === newName).id\n                personService.update(personId, newPerson)\n                    .then((response) => {\n                        const updatedPersons = persons.map(person => person.id === personId ? { ...person, number: newNumber } : person)\n                        setPersons(updatedPersons)\n                        showMessage(`Updated ${newName}`)\n                    })\n                    .catch((error) => {\n                        showMessage(error.response.data.error, true)\n                    })\n\n            }\n        } else {\n            // Create a new 'person'\n            personService.create(newPerson)\n                .then((response) => {\n                    setPersons(persons.concat(response))\n                    setNewName('')\n                    setNewNumber('')\n                    showMessage(`Added ${newName}`)\n                })\n                .catch((error) => {\n                    showMessage(error.response.data.error, true)\n                })\n\n        }\n    }\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const handleDelete = (id, name) => () => {\n        if (window.confirm(`Delete ${name} from phonebook?`)) {\n            // Delete from backend\n            personService.remove(id).then(() => {\n            }).catch(() => {\n                showMessage(`Information of ${name} has already been removed from server`, true)\n            })\n            // Delete from state\n            const newPersons = persons.filter(person => person.id !== id)\n            setPersons(newPersons)\n        }\n    }\n\n    // function for setting up the notification message, default type is a regular message (green)\n    // setting 'isError' to true changes it to an error message (red)\n    const showMessage = (message, isError = false) => {\n        setIsError(isError)\n        setMessage(JSON.stringify(message))\n        setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} isError={isError} />\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n            <h3>Add a new</h3>\n            <PersonForm handleSubmit={handleSubmit} newName={newName} newNumber={newNumber} nameChange={handleNameChange} numberChange={handleNumberChange} />\n\n            <h3>Numbers</h3>\n            <Persons filter={filter} persons={persons} deleteHandler={handleDelete} />\n        </div>\n    )\n}\n\nconst Notification = ({ message, isError }) => {\n    if (message === null) return null\n    return (\n        <div className={`${isError ? \"error\" : \"message\"} notification`} >\n            {message}\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}